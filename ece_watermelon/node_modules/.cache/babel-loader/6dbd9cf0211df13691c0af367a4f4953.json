{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kiary\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Utils\\\\CardAdder.js\";\nimport React, { Component } from \"react\";\nimport { MDBInput, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\";\nimport { getSessionUser } from \"../../Database/DatabaseSession\";\nexport default class CardAdder extends Component {\n  constructor(props) {\n    super(props);\n    this.toggled = false;\n    this.closeAddingCard = null;\n    this.state = {\n      last_4: \"0000\",\n      brand: \"jcb\",\n      month: \"01\",\n      year: \"2018\"\n    };\n    this.generateMonthOption = this.generateMonthOption.bind(this);\n    this.generateYearOption = this.generateYearOption.bind(this);\n    this.updateLast4 = this.updateLast4.bind(this);\n    this.updateBrand = this.updateBrand.bind(this);\n    this.updateMonth = this.updateMonth.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.submit = this.submit.bind(this);\n  } // Validate form and update the card\n\n\n  submit(event) {\n    event.preventDefault();\n\n    if (this.state.last_4.length === 4) {\n      let cards = JSON.parse(localStorage.getItem(\"cards\"));\n\n      if (cards >= 1) {\n        let identifier = cards[cards.length - 1].id + 1;\n        cards.push({\n          id: identifier,\n          last_4: this.state.last_4,\n          brand: this.state.brand,\n          expired_at: this.state.year + \"-\" + this.state.month + \"-01\",\n          user_id: getSessionUser().id\n        });\n        localStorage.setItem(\"cards\", JSON.stringify(cards));\n        this.close();\n      }\n    }\n  }\n\n  close() {\n    this.setState({\n      last_4: \"0000\",\n      brand: \"jcb\",\n      month: \"01\",\n      year: 2018\n    });\n    this.props.closeAddingCard();\n  }\n\n  updateLast4(event) {\n    this.setState({\n      last_4: event.target.value\n    });\n  }\n\n  updateBrand(event) {\n    this.setState({\n      brand: event.target.value\n    });\n  }\n\n  updateMonth(event) {\n    this.setState({\n      month: event.target.value\n    });\n  }\n\n  updateYear(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n\n  generateMonthOption() {\n    var lis = [];\n\n    for (var i = 1; i < 13; i++) {\n      if (i < 10) {\n        lis.push(React.createElement(\"option\", {\n          value: \"0\" + i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, i));\n      } else {\n        lis.push(React.createElement(\"option\", {\n          value: i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, i));\n      }\n    }\n\n    return lis;\n  }\n\n  generateYearOption() {\n    var lis = [];\n\n    for (var i = 2018; i < 2040; i++) {\n      lis.push(React.createElement(\"option\", {\n        value: i,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, i));\n    }\n\n    return lis;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      centered: true,\n      isOpen: this.props.toggled,\n      toggle: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Add a new Card\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.last_4,\n      onChange: this.updateLast4,\n      type: \"number\",\n      className: \"form-control\",\n      label: \"Last Four numbers of your card\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Card Brand\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      label: \"Card Brand\",\n      onChange: this.updateBrand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"jcb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"CB\"), React.createElement(\"option\", {\n      value: \"master_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"MasterCard\"), React.createElement(\"option\", {\n      value: \"visa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Visa\"), React.createElement(\"option\", {\n      value: \"american_express\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"American Express\"), React.createElement(\"option\", {\n      value: \"union_pay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Union Pay\"))), React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Expiration Date\"), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.generateMonthOption())), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block',\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.generateYearOption()))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Proceed\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Utils\\CardAdder.js"],"names":["React","Component","MDBInput","MDBModal","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBBtn","getSessionUser","CardAdder","constructor","props","toggled","closeAddingCard","state","last_4","brand","month","year","generateMonthOption","bind","generateYearOption","updateLast4","updateBrand","updateMonth","updateYear","submit","event","preventDefault","length","cards","JSON","parse","localStorage","getItem","identifier","id","push","expired_at","user_id","setItem","stringify","close","setState","target","value","lis","i","render","marginBottom","fontSize","width","display","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBInput, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\"\nimport { getSessionUser } from \"../../Database/DatabaseSession\";\n\nexport default class CardAdder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggled = false;\n        this.closeAddingCard = null;\n        this.state = {\n            last_4: \"0000\",\n            brand: \"jcb\",\n            month: \"01\",\n            year: \"2018\"\n        }\n        this.generateMonthOption = this.generateMonthOption.bind(this);\n        this.generateYearOption = this.generateYearOption.bind(this);\n        this.updateLast4 = this.updateLast4.bind(this);\n        this.updateBrand = this.updateBrand.bind(this);\n        this.updateMonth = this.updateMonth.bind(this);\n        this.updateYear = this.updateYear.bind(this);\n        this.submit = this.submit.bind(this);\n\n    }\n\n    // Validate form and update the card\n    submit(event) {\n        event.preventDefault();\n        if (this.state.last_4.length === 4) {\n            let cards = JSON.parse(localStorage.getItem(\"cards\"));\n            if (cards >= 1) {\n                let identifier = cards[cards.length - 1].id+1;\n                cards.push({\n                    id: identifier,\n                    last_4: this.state.last_4,\n                    brand: this.state.brand,\n                    expired_at: this.state.year + \"-\" + this.state.month + \"-01\",\n                    user_id: getSessionUser().id\n                });\n                localStorage.setItem(\"cards\", JSON.stringify(cards));\n                this.close();\n            }\n        }\n\n    };\n\n    close() {\n        this.setState({\n            last_4: \"0000\",\n            brand: \"jcb\",\n            month: \"01\",\n            year: 2018\n        });\n        this.props.closeAddingCard();\n    }\n\n    updateLast4(event) {\n        this.setState({ last_4: event.target.value });\n    };\n\n    updateBrand(event) {\n        this.setState({ brand: event.target.value });\n    };\n\n    updateMonth(event) {\n        this.setState({ month: event.target.value });\n    }\n\n    updateYear(event) {\n        this.setState({ year: event.target.value });\n    }\n\n    generateMonthOption() {\n        var lis = [];\n        for (var i = 1; i < 13; i++) {\n            if (i < 10) {\n                lis.push(<option value={\"0\" + i} key={i}>{i}</option>);\n            }\n            else {\n                lis.push(<option value={i} key={i}>{i}</option>);\n            }\n        }\n        return lis;\n    }\n\n    generateYearOption() {\n        var lis = [];\n        for (var i = 2018; i < 2040; i++) {\n            lis.push(<option value={i} key={i}>{i}</option>);\n        }\n        return lis;\n    }\n\n    render() {\n        return (\n\n            <form className=\"needs-validation\" onSubmit={this.submit}>\n                <MDBModal centered isOpen={this.props.toggled} toggle={() => this.close()}>\n                    <MDBModalHeader toggle={() => this.close()}>Add a new Card</MDBModalHeader>\n                    <MDBModalBody>\n\n                        <MDBInput value={this.state.last_4} onChange={this.updateLast4} type=\"number\" className=\"form-control\" label=\"Last Four numbers of your card\" required />\n                        <div style={{ marginBottom: '15px' }}>\n                            <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Card Brand</p>\n                            <select className=\"browser-default custom-select\" label=\"Card Brand\" onChange={this.updateBrand}>\n                                <option value='jcb'>CB</option>\n                                <option value='master_card'>MasterCard</option>\n                                <option value='visa'>Visa</option>\n                                <option value='american_express'>American Express</option>\n                                <option value='union_pay'>Union Pay</option>\n                            </select>\n                        </div>\n\n                        <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Expiration Date</p>\n\n                        <div style={{ width: '45%', display: 'inline-block' }}>\n                            <select className=\"browser-default custom-select\" onChange={this.updateMonth}>\n                                {this.generateMonthOption()}\n                            </select>\n                        </div>\n\n                        <div style={{ width: '45%', display: 'inline-block', marginLeft: '20px' }}>\n                            <select className=\"browser-default custom-select\" onChange={this.updateYear}>\n                                {this.generateYearOption()}\n                            </select>\n                        </div>\n\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn color=\"secondary\" onClick={() => this.close()}>Close</MDBBtn>\n                        <MDBBtn color=\"primary\" type=\"submit\">Proceed</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}