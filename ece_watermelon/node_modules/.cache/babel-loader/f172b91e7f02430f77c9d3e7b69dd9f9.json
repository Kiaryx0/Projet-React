{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Utils\\\\CardEditor.js\";\nimport React, { Component } from \"react\";\nimport { MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\";\nimport { getCardPictureSrc } from \"../../Database/DatabaseCard\";\nexport default class CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.toggled = true;\n    this.closeEditingCard = null;\n    this.selectedID = 0;\n    this.edit = this.edit.bind(this);\n    this.showEditedCard = this.showEditedCard.bind(this);\n  } // Validate form and update the card\n\n\n  delete() {\n    var cards = JSON.parse(localStorage.getItem(\"cards\"));\n    var array = cards.filter(card => {\n      return card.id !== this.props.selectedID;\n    });\n    localStorage.setItem(\"cards\", JSON.stringify(array));\n    this.props.closeDeletingCard();\n  }\n\n  showEditedCard() {\n    if (this.props.selectedID !== 0) {\n      var cards = JSON.parse(localStorage.getItem(\"cards\"));\n      var array = cards.filter(card => {\n        return card.id === this.props.selectedID;\n      });\n      let card = null;\n\n      if (array.length === 1) {\n        card = array[0];\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Are you sure you want to delete the following card ?\"), React.createElement(\"img\", {\n          src: getCardPictureSrc(card),\n          alt: \"\",\n          style: {\n            width: '50%',\n            maxWidth: '80px',\n            display: 'inline'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          className: \"mb-1\",\n          style: {\n            display: 'inline',\n            marginLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Card : ****-****-****-\", card.last_4));\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(MDBModal, {\n      centered: true,\n      isOpen: this.props.toggled,\n      toggle: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Add a new Card\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.showEditedCard()), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: () => this.delete(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Proceed\")));\n  }\n\n}","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Utils\\CardEditor.js"],"names":["React","Component","MDBModal","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBBtn","getCardPictureSrc","CardEditor","constructor","props","toggled","closeEditingCard","selectedID","edit","bind","showEditedCard","delete","cards","JSON","parse","localStorage","getItem","array","filter","card","id","setItem","stringify","closeDeletingCard","length","width","maxWidth","display","marginLeft","last_4","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\"\r\nimport { getCardPictureSrc } from \"../../Database/DatabaseCard\";\r\n\r\nexport default class CardEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggled = true;\r\n        this.closeEditingCard = null;\r\n        this.selectedID = 0;\r\n        this.edit = this.edit.bind(this);\r\n        this.showEditedCard = this.showEditedCard.bind(this);\r\n    }\r\n\r\n    // Validate form and update the card\r\n    delete() {\r\n\r\n        var cards = JSON.parse(localStorage.getItem(\"cards\"));\r\n        var array = cards.filter(card => {\r\n            return card.id !== this.props.selectedID\r\n        })\r\n        localStorage.setItem(\"cards\", JSON.stringify(array));\r\n        this.props.closeDeletingCard();\r\n    };\r\n\r\n    showEditedCard() {\r\n        if (this.props.selectedID !== 0) {\r\n\r\n            var cards = JSON.parse(localStorage.getItem(\"cards\"));\r\n            var array = cards.filter(card => {\r\n                return card.id === this.props.selectedID\r\n            })\r\n\r\n            let card = null;\r\n            if (array.length === 1) {\r\n                card = array[0];\r\n                return (\r\n\r\n                    <div>\r\n                        <p>Are you sure you want to delete the following card ?</p>\r\n                        <img src={getCardPictureSrc(card)} alt=\"\" style={{ width: '50%', maxWidth: '80px', display: 'inline' }}></img>\r\n                        <h5 className=\"mb-1\" style={{ display: 'inline', marginLeft: '20px' }}>Card : ****-****-****-{card.last_4}</h5>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBModal centered isOpen={this.props.toggled} toggle={() => this.props.closeEditingCard()}>\r\n                <MDBModalHeader toggle={() => this.props.closeEditingCard()}>Add a new Card</MDBModalHeader>\r\n                <MDBModalBody>\r\n\r\n                    {this.showEditedCard()}\r\n\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color=\"secondary\" onClick={() => this.props.closeEditingCard()}>Close</MDBBtn>\r\n                    <MDBBtn color=\"primary\" onClick={() => this.delete()}>Proceed</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}