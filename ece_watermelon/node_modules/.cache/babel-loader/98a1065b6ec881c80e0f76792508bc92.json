{"ast":null,"code":"import { getSessionUser } from \"./DatabaseSession\"; /// This file contains all the functions related to the wallet data access\n\n/**\n * Returns the wallet of the current session user and return null if no one's logged in\n */\n\nexport default function getSessionWallet() {\n  let user = getSessionUser();\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n  let array = wallets.filter(w => {\n    return w.user_id === user.id;\n  }); // If wallet found return it\n\n  if (array.length === 1) {\n    return array[0];\n  } // Else return null\n  else {\n      return null;\n    }\n}\n/**\n * Return the balance of the wallet as string\n */\n\nexport function getWalletAmount() {\n  let wallet = getSessionWallet(getSessionUser());\n\n  if (wallet != null) {\n    return (wallet.balance / 100.0).toFixed(2);\n  }\n}\n/**\n * Make a deposit on the count using the credit card\n * @param {Amount of money in cents '1700' = 17.00€} money \n * @param {Credit card} card \n */\n\nexport function makeDeposit(money, card) {\n  // Credit card\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n  let current = null;\n\n  for (var i = 0; i < wallets.length; i++) {\n    if (wallets[i].user_id === card.user_id) {\n      wallets[i].balance -= money;\n      current = wallets[i];\n    }\n  }\n\n  localStorage.setItem(\"wallets\", JSON.stringify(wallets)); // Save in payout history\n\n  let payouts = JSON.parse(localStorage.getItem(\"payouts\"));\n  payouts.push({\n    id: payouts.length + 1,\n    wallet_id: current.id,\n    amount: money\n  });\n  localStorage.setItem(\"payouts\", JSON.stringify(payouts));\n}\n/**\n * Make a deposit on the count using the credit card\n * @param {Amount of money in cents '1700' = 17.00€} money \n * @param {Credit card} card \n */\n\nexport function makeWithdrawal(money, card) {\n  // Credit wallet\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n  let current = null;\n\n  for (var i = 0; i < wallets.length; i++) {\n    if (wallets[i].user_id === card.user_id) {\n      wallets[i].balance += money;\n      current = wallets[i];\n    }\n  }\n\n  localStorage.setItem(\"wallets\", JSON.stringify(wallets)); // Save in payin history\n\n  let payins = JSON.parse(localStorage.getItem(\"payins\"));\n  payins.push({\n    id: payins.length + 1,\n    wallet_id: current.id,\n    amount: money\n  });\n  localStorage.setItem(\"payins\", JSON.stringify(payins));\n}\nexport function makeTransfer(money, myID, otherID) {\n  // Transfer amount from one wallet to another\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n\n  for (let i = 0; i < wallets.length; i++) {\n    if (wallets[i].user_id === myID) {\n      wallets[i].balance -= money;\n      console.log(\"current wallet balance:\" + wallets[i].balance);\n      console.log(\"money:\" + money);\n      console.log(\"myID\");\n      console.log(\"otherID\");\n    } else if (wallets[i].user_id === otherID) {\n      wallets[i].balance += money;\n      console.log(\"wallet other user:\" + wallets[i].balance);\n    }\n  }\n\n  localStorage.setItem(\"wallets\", JSON.stringify(wallets)); // Save in transfer history\n\n  let transfers = JSON.parse(localStorage.getItem(\"transfers\"));\n  transfers.push({\n    id: transfers.length + 1,\n    debited_wallet_id: myID,\n    credited_wallet_id: otherID,\n    amount: money\n  });\n  localStorage.setItem(\"transfers\", JSON.stringify(transfers));\n}\nexport function getSessionDeposits() {\n  let walletID = getSessionWallet().id;\n  let deposit = JSON.parse(localStorage.getItem(\"payouts\"));\n\n  if (deposit !== null) {\n    deposit.reverse();\n    return deposit.filter(d => {\n      return d.wallet_id === walletID;\n    });\n  }\n\n  return [];\n}\nexport function getSessionWithdrawals() {\n  let walletID = getSessionWallet().id;\n  let withdrawal = JSON.parse(localStorage.getItem(\"payins\"));\n\n  if (withdrawal !== null) {\n    withdrawal.reverse();\n    return withdrawal.filter(w => {\n      return w.wallet_id === walletID;\n    });\n  }\n\n  return [];\n}\nexport function getSessionTransfers() {\n  let walletID = getSessionWallet().id;\n  let transfer = JSON.parse(localStorage.getItem(\"transfers\"));\n\n  if (transfer !== null) {\n    transfer.reverse();\n    return transfer.filter(t => {\n      return t.debited_wallet_id === walletID || t.credited_wallet_id === walletID;\n    });\n  }\n\n  return [];\n}\nexport function getUserWithWallet(walletID) {\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n  let users = JSON.parse(localStorage.getItem(\"users\"));\n  let array = wallets.filter(w => {\n    return w.id === walletID;\n  });\n\n  if (array.length === 1) {\n    let wallet = array[0];\n    array = users.filter(u => {\n      return u.id === wallet.user_id;\n    });\n\n    if (array.length === 1) {\n      return array[0].first_name;\n    }\n  }\n\n  return \"\";\n}","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Database\\DatabaseWallet.js"],"names":["getSessionUser","getSessionWallet","user","wallets","JSON","parse","localStorage","getItem","array","filter","w","user_id","id","length","getWalletAmount","wallet","balance","toFixed","makeDeposit","money","card","current","i","setItem","stringify","payouts","push","wallet_id","amount","makeWithdrawal","payins","makeTransfer","myID","otherID","console","log","transfers","debited_wallet_id","credited_wallet_id","getSessionDeposits","walletID","deposit","reverse","d","getSessionWithdrawals","withdrawal","getSessionTransfers","transfer","t","getUserWithWallet","users","u","first_name"],"mappings":"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","sourcesContent":["import { getSessionUser } from \"./DatabaseSession\";\n\n/// This file contains all the functions related to the wallet data access\n\n/**\n * Returns the wallet of the current session user and return null if no one's logged in\n */\nexport default function getSessionWallet(){\n\n    let user = getSessionUser();\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"))\n\n    let array = wallets.filter(w=>{\n        return w.user_id === user.id;\n    });\n\n    // If wallet found return it\n    if(array.length === 1){\n        return array[0];\n    }\n    // Else return null\n    else{\n        return null;\n    }\n}\n\n/**\n * Return the balance of the wallet as string\n */\nexport function getWalletAmount(){\n    let wallet = getSessionWallet(getSessionUser());\n    if(wallet != null){\n        return (wallet.balance / 100.0).toFixed(2);\n    }\n}\n\n/**\n * Make a deposit on the count using the credit card\n * @param {Amount of money in cents '1700' = 17.00€} money \n * @param {Credit card} card \n */\nexport function makeDeposit(money, card){\n    \n    // Credit card\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n    let current = null;\n    for(var i= 0; i<wallets.length; i++){\n        if(wallets[i].user_id === card.user_id){\n            wallets[i].balance -= money;\n            current = wallets[i];\n        }\n    }\n    localStorage.setItem(\"wallets\", JSON.stringify(wallets));\n\n    // Save in payout history\n    let payouts = JSON.parse(localStorage.getItem(\"payouts\"));\n    payouts.push({   id: payouts.length+1, wallet_id: current.id, amount: money })\n    localStorage.setItem(\"payouts\", JSON.stringify(payouts));\n}\n\n/**\n * Make a deposit on the count using the credit card\n * @param {Amount of money in cents '1700' = 17.00€} money \n * @param {Credit card} card \n */\nexport function makeWithdrawal(money, card){\n    \n    // Credit wallet\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n    let current = null;\n    for(var i= 0; i<wallets.length; i++){\n        if(wallets[i].user_id === card.user_id){\n            wallets[i].balance += money;\n            current = wallets[i];\n        }\n    }\n    localStorage.setItem(\"wallets\", JSON.stringify(wallets));\n\n    // Save in payin history\n    let payins = JSON.parse(localStorage.getItem(\"payins\"));\n    payins.push({   id: payins.length+1, wallet_id: current.id, amount: money })\n    localStorage.setItem(\"payins\", JSON.stringify(payins));\n}\n\nexport function makeTransfer(money, myID, otherID){\n\n    // Transfer amount from one wallet to another\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n    for(let i=0; i<wallets.length; i++){\n        if(wallets[i].user_id === myID){\n            wallets[i].balance -= money;\n            console.log(\"current wallet balance:\" + wallets[i].balance);\n            console.log(\"money:\"+money);\n            console.log(\"myID\");\n            console.log(\"otherID\");\n        }\n        else if(wallets[i].user_id === otherID){\n            wallets[i].balance +=money;\n            console.log(\"wallet other user:\"+wallets[i].balance);\n        }\n    }\n    localStorage.setItem(\"wallets\", JSON.stringify(wallets));\n\n    // Save in transfer history\n    let transfers = JSON.parse(localStorage.getItem(\"transfers\"));\n    transfers.push({ id: transfers.length+1, debited_wallet_id: myID, credited_wallet_id: otherID, amount: money});\n    localStorage.setItem(\"transfers\", JSON.stringify(transfers));\n}\n\nexport function getSessionDeposits(){\n    let walletID = getSessionWallet().id;\n    let deposit = JSON.parse(localStorage.getItem(\"payouts\"))\n    if(deposit !== null){\n        deposit.reverse()\n        return deposit.filter(d=>{\n            return d.wallet_id === walletID;\n        })\n    }\n    return [];\n}\n\nexport function getSessionWithdrawals(){\n    let walletID = getSessionWallet().id;\n    let withdrawal = JSON.parse(localStorage.getItem(\"payins\"))\n    if(withdrawal !== null){\n        withdrawal.reverse()\n        return withdrawal.filter(w=>{\n            return w.wallet_id === walletID;\n        })\n    }\n    return [];\n}\n\nexport function getSessionTransfers(){\n    let walletID = getSessionWallet().id;\n    let transfer = JSON.parse(localStorage.getItem(\"transfers\"))\n    if(transfer !== null){\n        transfer.reverse()\n        return transfer.filter(t=>{\n            return t.debited_wallet_id === walletID || t.credited_wallet_id === walletID;\n        })\n    }\n    return [];\n    \n}\n\nexport function getUserWithWallet(walletID){\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n    let users = JSON.parse(localStorage.getItem(\"users\"));\n    \n    let array = wallets.filter((w)=>{\n        return w.id === walletID;\n    })\n    if(array.length === 1){\n        let wallet = array[0];\n        array = users.filter((u)=>{\n            return u.id === wallet.user_id\n        })\n        if(array.length === 1){\n            return array[0].first_name;\n        }\n    }\n\n    return \"\";\n}"]},"metadata":{},"sourceType":"module"}