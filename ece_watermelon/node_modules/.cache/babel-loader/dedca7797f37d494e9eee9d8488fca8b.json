{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kiary\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Forms\\\\LoginForm.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { MDBCard, MDBCardBody, MDBMask, MDBView, MDBContainer, MDBInput, MDBBtn, MDBAlert, MDBIcon } from 'mdbreact';\nimport loginUser from \"../../Database/DatabaseSession.js\";\nimport background from '../../Pictures/forms_background.jpg';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      s_email: '',\n      s_password: '',\n      check_user: '',\n      alert_invisible: true\n    };\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /**\n   * Updating this.state.s_email with user input\n   * @param {retrieve user input} event \n   */\n\n\n  handleEmail(event) {\n    this.setState({\n      s_email: event.target.value\n    });\n  }\n  /**\n   * Updating this.state.s_password with user input\n   * @param {retrieve user input} event \n   */\n\n\n  handlePassword(event) {\n    this.setState({\n      s_password: event.target.value\n    });\n  }\n  /**\n   * Validate and login current user\n   * @param {retrieve forms from all user inputs} event \n   */\n\n\n  handleSubmit(event) {\n    this.setState({\n      alert_invisible: false,\n      check_user: loginUser(this.state.s_email, this.state.s_password)\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(MDBView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: background,\n      alt: \"\",\n      style: {\n        backgroundRepeat: \"cover\",\n        width: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(MDBMask, {\n      overlay: \"black-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      className: \"d-flex flex-column align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.alert_invisible ? React.createElement(\"div\", {\n      className: \"invisible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"visible mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.check_user ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(MDBAlert, {\n      color: \"danger\",\n      dismiss: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Wrong Login or Password!\")), React.createElement(MDBCard, {\n      className: \"mt-3 w-50\",\n      style: {\n        backgroundColor: \"rgba(150,150,150,0.3)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      className: \"white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"white-text\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h3 text-center mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"sign-in-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \" Sign in\"), React.createElement(\"hr\", {\n      className: \"hr-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"Your email\",\n      icon: \"envelope\",\n      type: \"email\",\n      onChange: this.handleEmail,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"Your password\",\n      icon: \"lock\",\n      type: \"password\",\n      onChange: this.handlePassword,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"indigo\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Login\"))))))));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Forms\\LoginForm.js"],"names":["React","Redirect","MDBCard","MDBCardBody","MDBMask","MDBView","MDBContainer","MDBInput","MDBBtn","MDBAlert","MDBIcon","loginUser","background","LoginForm","Component","constructor","props","state","s_email","s_password","check_user","alert_invisible","handleEmail","bind","handlePassword","handleSubmit","event","setState","target","value","preventDefault","render","backgroundRepeat","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  MDBCard, MDBCardBody, MDBMask, MDBView,\n  MDBContainer, MDBInput, MDBBtn, MDBAlert, MDBIcon\n} from 'mdbreact';\nimport loginUser from \"../../Database/DatabaseSession.js\";\nimport background from '../../Pictures/forms_background.jpg';\n\nclass LoginForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      s_email: '',\n      s_password: '',\n      check_user: '',\n      alert_invisible: true,\n    }\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Updating this.state.s_email with user input\n   * @param {retrieve user input} event \n   */\n  handleEmail(event) {\n    this.setState({\n      s_email: event.target.value\n    });\n  }\n\n  /**\n   * Updating this.state.s_password with user input\n   * @param {retrieve user input} event \n   */\n  handlePassword(event) {\n    this.setState({\n      s_password: event.target.value\n    })\n  }\n\n  /**\n   * Validate and login current user\n   * @param {retrieve forms from all user inputs} event \n   */\n  handleSubmit(event) {\n    this.setState({\n      alert_invisible: false,\n      check_user: loginUser(this.state.s_email, this.state.s_password)\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <MDBView>\n        <img src={background} alt=\"\" style={{ backgroundRepeat: \"cover\", width:\"100vw\" }} />\n        <MDBMask overlay=\"black-light\">\n          <MDBContainer className=\"d-flex flex-column align-items-center\">\n            {this.state.alert_invisible ? <div className=\"invisible\"></div> : <div className=\"visible mt-3\">\n              {this.state.check_user ? <Redirect to='/' /> : <MDBAlert color=\"danger\" dismiss>Wrong Login or Password!</MDBAlert>}\n            </div>}\n            <MDBCard className=\"mt-3 w-50\" style={{ backgroundColor: \"rgba(150,150,150,0.3)\" }}>\n              <MDBCardBody className=\"white-text\">\n                <form className=\"white-text\" onSubmit={this.handleSubmit}>\n                  <p className=\"h3 text-center mt-2\">\n                    <MDBIcon icon=\"sign-in-alt\" /> Sign in\n              </p>\n                  <hr className=\"hr-light\" />\n                  <div>\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Your email\"\n                      icon=\"envelope\"\n                      type=\"email\"\n                      onChange={this.handleEmail}\n                      required\n                    />\n                    <MDBInput\n                      className=\"white-text\"\n                      label=\"Your password\"\n                      icon=\"lock\"\n                      type=\"password\"\n                      onChange={this.handlePassword}\n                      required\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn color=\"indigo\" type=\"submit\">Login</MDBBtn>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBContainer>\n        </MDBMask>\n      </MDBView>\n    );\n  };\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}