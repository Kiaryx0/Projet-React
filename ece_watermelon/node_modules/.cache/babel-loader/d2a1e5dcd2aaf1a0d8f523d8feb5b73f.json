{"ast":null,"code":"/**\n * Function connecting the user owning the mail address and the password to the local database\n * @param {mail of the user} mail \n * @param {password of the user} pswrd \n */\nexport function loginUser(mail, pswrd) {\n  var users = JSON.parse(localStorage.getItem(\"users\"));\n  var array = users.filter(user => {\n    return user.email === mail && user.password === pswrd;\n  });\n\n  if (array.length === 0) {\n    logoutUser();\n  } else {\n    let logged = array[0];\n    localStorage.setItem(\"session\", JSON.stringify(logged));\n  }\n}\n/**\n * This function sets the current user of the session to null\n */\n\nexport function logoutUser() {\n  var logged = null;\n  localStorage.setItem(\"session\", JSON.stringify(logged));\n}\n/**\n * This function returns the user currently connected to this session\n */\n\nexport function getSessionUser() {\n  return JSON.parse(localStorage.getItem(\"session\"));\n}\nexport default loginUser;","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Database\\DatabaseSession.js"],"names":["loginUser","mail","pswrd","users","JSON","parse","localStorage","getItem","array","filter","user","email","password","length","logoutUser","logged","setItem","stringify","getSessionUser"],"mappings":"AACA;;;;;AAKA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAA+B;AAClC,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AAEA,MAAIC,KAAK,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAE;AAC3B,WAAOA,IAAI,CAACC,KAAL,KAAeV,IAAf,IAAuBS,IAAI,CAACE,QAAL,KAAkBV,KAAhD;AACH,GAFW,CAAZ;;AAIA,MAAGM,KAAK,CAACK,MAAN,KAAiB,CAApB,EAAsB;AAClBC,IAAAA,UAAU;AACb,GAFD,MAEK;AACD,QAAIC,MAAM,GAAGP,KAAK,CAAC,CAAD,CAAlB;AACAF,IAAAA,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCZ,IAAI,CAACa,SAAL,CAAeF,MAAf,CAAhC;AACH;AACJ;AAED;;;;AAGA,OAAO,SAASD,UAAT,GAAqB;AACxB,MAAIC,MAAM,GAAG,IAAb;AACAT,EAAAA,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCZ,IAAI,CAACa,SAAL,CAAeF,MAAf,CAAhC;AACH;AAED;;;;AAGA,OAAO,SAASG,cAAT,GAAyB;AAC5B,SAAOd,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAP;AACH;AAED,eAAeP,SAAf","sourcesContent":["\n/**\n * Function connecting the user owning the mail address and the password to the local database\n * @param {mail of the user} mail \n * @param {password of the user} pswrd \n */\nexport function loginUser(mail, pswrd){\n    var users = JSON.parse(localStorage.getItem(\"users\"));\n    \n    var array = users.filter(user=>{\n        return user.email === mail && user.password === pswrd\n    })\n    \n    if(array.length === 0){\n        logoutUser();\n    }else{\n        let logged = array[0];\n        localStorage.setItem(\"session\", JSON.stringify(logged));\n    }\n}\n\n/**\n * This function sets the current user of the session to null\n */\nexport function logoutUser(){\n    var logged = null;\n    localStorage.setItem(\"session\", JSON.stringify(logged));\n}\n\n/**\n * This function returns the user currently connected to this session\n */\nexport function getSessionUser(){\n    return JSON.parse(localStorage.getItem(\"session\"));\n}\n\nexport default loginUser;"]},"metadata":{},"sourceType":"module"}