{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Utils\\\\CardEditor.js\";\nimport React, { Component } from \"react\";\nimport { MDBModal, MDBInput, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\";\nimport { getCardPictureSrc, getCard } from \"../../Database/DatabaseCard\";\nexport default class CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.toggled = true;\n    this.closeEditingCard = null;\n    this.setState = {\n      last_4: \"0000\",\n      brand: \"jcb\",\n      month: \"01\",\n      year: 2018\n    };\n    this.showEditedCard = this.showEditedCard.bind(this);\n    this.generateMonthOption = this.generateMonthOption.bind(this);\n    this.generateYearOption = this.generateYearOption.bind(this);\n    this.updateLast4 = this.updateLast4.bind(this);\n    this.updateBrand = this.updateBrand.bind(this);\n    this.updateMonth = this.updateMonth.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.submit = this.submit.bind(this);\n    this.updateCardState = this.updateCardState.bind(this);\n  } // Validate form and update the card\n\n\n  submit(event) {\n    event.preventDefault();\n  }\n\n  /**\r\n   * Updtate card state\r\n   */\n  updateCardState() {\n    if (this.props.selectedID !== 0) {\n      let card = getCard(this.props.selectedID);\n      let date = Date.parse(card.expired_at);\n      this.setState = {\n        last_4: card.last_4,\n        brand: card.brand,\n        month: date.month,\n        year: date.year\n      };\n    }\n  }\n\n  showEditedCard() {\n    if (this.props.selectedID !== 0) {\n      var cards = JSON.parse(localStorage.getItem(\"cards\"));\n      var array = cards.filter(card => {\n        return card.id === this.props.selectedID;\n      });\n      let card = null;\n\n      if (array.length === 1) {\n        card = array[0];\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Are you sure you want to delete the following card ?\"), React.createElement(\"img\", {\n          src: getCardPictureSrc(card),\n          alt: \"\",\n          style: {\n            width: '50%',\n            maxWidth: '80px',\n            display: 'inline'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          className: \"mb-1\",\n          style: {\n            display: 'inline',\n            marginLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Card : ****-****-****-\", card.last_4));\n      }\n    }\n  }\n\n  updateLast4(event) {\n    this.setState({\n      last_4: event.target.value\n    });\n  }\n\n  updateBrand(event) {\n    this.setState({\n      brand: event.target.value\n    });\n  }\n\n  updateMonth(event) {\n    this.setState({\n      month: event.target.value\n    });\n  }\n\n  updateYear(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n\n  generateMonthOption() {\n    var lis = [];\n\n    for (var i = 1; i < 13; i++) {\n      if (i < 10) {\n        lis.push(React.createElement(\"option\", {\n          value: \"0\" + i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, i));\n      } else {\n        lis.push(React.createElement(\"option\", {\n          value: i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, i));\n      }\n    }\n\n    return lis;\n  }\n\n  generateYearOption() {\n    var lis = [];\n\n    for (var i = 2018; i < 2040; i++) {\n      lis.push(React.createElement(\"option\", {\n        value: i,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, i));\n    }\n\n    return lis;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      centered: true,\n      isOpen: this.props.toggled,\n      toggle: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Edit this Card\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.showEditedCard(), React.createElement(MDBInput, {\n      value: this.state.last_4,\n      onChange: this.updateLast4,\n      type: \"number\",\n      className: \"form-control\",\n      label: \"Last Four numbers of your card\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Card Brand\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      label: \"Card Brand\",\n      onChange: this.updateBrand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"jcb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"CB\"), React.createElement(\"option\", {\n      value: \"master_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"MasterCard\"), React.createElement(\"option\", {\n      value: \"visa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Visa\"), React.createElement(\"option\", {\n      value: \"american_express\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"American Express\"), React.createElement(\"option\", {\n      value: \"union_pay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Union Pay\"))), React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Expiration Date\"), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.generateMonthOption())), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block',\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.generateYearOption()))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.props.closeEditingCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: () => this.edit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Proceed\"))));\n  }\n\n}","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Utils\\CardEditor.js"],"names":["React","Component","MDBModal","MDBInput","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBBtn","getCardPictureSrc","getCard","CardEditor","constructor","props","toggled","closeEditingCard","setState","last_4","brand","month","year","showEditedCard","bind","generateMonthOption","generateYearOption","updateLast4","updateBrand","updateMonth","updateYear","submit","updateCardState","event","preventDefault","selectedID","card","date","Date","parse","expired_at","cards","JSON","localStorage","getItem","array","filter","id","length","width","maxWidth","display","marginLeft","target","value","lis","i","push","render","state","marginBottom","fontSize","edit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBModal, MDBInput, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\"\r\nimport { getCardPictureSrc, getCard } from \"../../Database/DatabaseCard\";\r\n\r\nexport default class CardEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggled = true;\r\n        this.closeEditingCard = null;\r\n        this.setState ={\r\n            last_4: \"0000\",\r\n            brand: \"jcb\",\r\n            month: \"01\",\r\n            year: 2018\r\n        };\r\n        this.showEditedCard = this.showEditedCard.bind(this);\r\n        this.generateMonthOption = this.generateMonthOption.bind(this);\r\n        this.generateYearOption = this.generateYearOption.bind(this);\r\n        this.updateLast4 = this.updateLast4.bind(this);\r\n        this.updateBrand = this.updateBrand.bind(this);\r\n        this.updateMonth = this.updateMonth.bind(this);\r\n        this.updateYear = this.updateYear.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.updateCardState = this.updateCardState.bind(this);\r\n\r\n        \r\n    }\r\n\r\n     // Validate form and update the card\r\n     submit(event){\r\n        event.preventDefault();\r\n    };\r\n\r\n    /**\r\n     * Updtate card state\r\n     */\r\n    updateCardState(){\r\n        if(this.props.selectedID !== 0){\r\n            let card = getCard(this.props.selectedID);\r\n            let date = Date.parse(card.expired_at);\r\n            this.setState ={\r\n                last_4: card.last_4,\r\n                brand: card.brand,\r\n                month: date.month,\r\n                year: date.year\r\n            };\r\n        }\r\n    }\r\n\r\n    showEditedCard() {\r\n        if (this.props.selectedID !== 0) {\r\n\r\n            var cards = JSON.parse(localStorage.getItem(\"cards\"));\r\n            var array = cards.filter(card => {\r\n                return card.id === this.props.selectedID\r\n            })\r\n\r\n            let card = null;\r\n            if (array.length === 1) {\r\n                card = array[0];\r\n                return (\r\n\r\n                    <div>\r\n                        <p>Are you sure you want to delete the following card ?</p>\r\n                        <img src={getCardPictureSrc(card)} alt=\"\" style={{ width: '50%', maxWidth: '80px', display: 'inline' }}></img>\r\n                        <h5 className=\"mb-1\" style={{ display: 'inline', marginLeft: '20px' }}>Card : ****-****-****-{card.last_4}</h5>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    updateLast4(event) {\r\n        this.setState({ last_4:  event.target.value});\r\n    };\r\n\r\n    updateBrand(event){\r\n        this.setState({ brand:  event.target.value});\r\n    };\r\n\r\n    updateMonth(event){\r\n        this.setState({ month:  event.target.value});\r\n    }\r\n\r\n    updateYear(event){\r\n        this.setState({ year:  event.target.value});\r\n    }\r\n\r\n    generateMonthOption() {\r\n        var lis = [];\r\n        for (var i = 1; i < 13; i++) {\r\n            if(i<10){\r\n                lis.push(<option value={\"0\"+i} key={i}>{i}</option>);\r\n            }\r\n            else{\r\n                lis.push(<option value={i} key={i}>{i}</option>);\r\n            }\r\n        }\r\n        return lis;\r\n    }\r\n\r\n    generateYearOption() {\r\n        var lis = [];\r\n        for (var i = 2018; i < 2040; i++) {\r\n            lis.push(<option value={i} key={i}>{i}</option>);\r\n        }\r\n        return lis;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"needs-validation\" onSubmit={this.submit}>\r\n            <MDBModal centered isOpen={this.props.toggled} toggle={() => this.props.closeEditingCard()}>\r\n                <MDBModalHeader toggle={() => this.props.closeEditingCard()}>Edit this Card</MDBModalHeader>\r\n                <MDBModalBody>\r\n\r\n                    {this.showEditedCard()}\r\n                    <MDBInput value={this.state.last_4} onChange={this.updateLast4} type=\"number\" className=\"form-control\" label=\"Last Four numbers of your card\" required/>\r\n                        <div style={{ marginBottom: '15px' }}>\r\n                            <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Card Brand</p>\r\n                            <select className=\"browser-default custom-select\" label=\"Card Brand\" onChange={this.updateBrand}>\r\n                                <option value='jcb'>CB</option>\r\n                                <option value='master_card'>MasterCard</option>\r\n                                <option value='visa'>Visa</option>\r\n                                <option value='american_express'>American Express</option>\r\n                                <option value='union_pay'>Union Pay</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                        <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Expiration Date</p>\r\n\r\n                        <div style={{ width: '45%', display: 'inline-block' }}>\r\n                            <select className=\"browser-default custom-select\" onChange={this.updateMonth}>\r\n                                {this.generateMonthOption()}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div style={{ width: '45%', display: 'inline-block', marginLeft: '20px' }}>\r\n                            <select className=\"browser-default custom-select\" onChange={this.updateYear}>\r\n                                {this.generateYearOption()}\r\n                            </select>\r\n                        </div>\r\n\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color=\"secondary\" onClick={() => this.props.closeEditingCard()}>Close</MDBBtn>\r\n                    <MDBBtn color=\"primary\" onClick={() => this.edit()}>Proceed</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n            </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}