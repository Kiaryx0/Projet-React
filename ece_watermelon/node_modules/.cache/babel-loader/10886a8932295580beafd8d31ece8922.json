{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kiary\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Utils\\\\CardEditor.js\";\nimport React, { Component } from \"react\";\nimport { MDBModal, MDBInput, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\";\nimport { getCardPictureSrc, getCard } from \"../../Database/DatabaseCard\";\nexport default class CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.toggled = true;\n    this.closeEditingCard = null;\n    this.state = {\n      last_4: \"0000\",\n      brand: \"jcb\",\n      month: \"01\",\n      year: 2018\n    };\n    this.showEditedCard = this.showEditedCard.bind(this);\n    this.generateMonthOption = this.generateMonthOption.bind(this);\n    this.generateYearOption = this.generateYearOption.bind(this);\n    this.updateLast4 = this.updateLast4.bind(this);\n    this.updateBrand = this.updateBrand.bind(this);\n    this.updateMonth = this.updateMonth.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.submit = this.submit.bind(this);\n    this.close = this.close.bind(this);\n  }\n  /** \n  * Validate form and update the card\n  */\n\n\n  submit(event) {\n    event.preventDefault();\n    let cards = JSON.parse(localStorage.getItem(\"cards\"));\n\n    for (var i = 0; i < cards.length; i++) {\n      if (cards[i].id === this.props.selectedID) {\n        cards[i].last_4 = this.state.last_4;\n        cards[i].brand = this.state.brand;\n        cards[i].expired_at = this.state.year + \"-\" + this.state.month + \"-01\";\n      }\n    }\n\n    localStorage.setItem(\"cards\", JSON.stringify(cards));\n    this.close();\n  }\n\n  /**\n   * reset state for next use\n   */\n  close() {\n    this.setState({\n      last_4: \"0000\",\n      brand: \"jcb\",\n      month: \"01\",\n      year: 2018\n    });\n    this.props.closeEditingCard();\n  }\n  /**\n   * Confirmation for selected card to edit\n   */\n\n\n  showEditedCard() {\n    if (this.props.selectedID !== 0) {\n      let card = getCard(this.props.selectedID);\n\n      if (card !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Are you sure you want to edit the following card ?\"), React.createElement(\"img\", {\n          src: getCardPictureSrc(card),\n          alt: \"\",\n          style: {\n            width: '50%',\n            maxWidth: '80px',\n            display: 'inline-block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            display: 'inline-block',\n            marginLeft: '20px',\n            verticalAlign: 'bottom'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Card : ****-****-****-\", card.last_4), React.createElement(\"p\", {\n          style: {\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Expired at : \", card.expired_at)));\n      }\n    }\n  }\n  /**\n   * Updating this.state.last_4 with user input\n   * @param {retrieve user input} event \n   */\n\n\n  updateLast4(event) {\n    this.setState({\n      last_4: event.target.value\n    });\n  }\n\n  /**\n   * Updating this.state.brand with user input\n   * @param {retrieve user input} event\n   */\n  updateBrand(event) {\n    this.setState({\n      brand: event.target.value\n    });\n  }\n\n  /**\n   * Updating this.state.month with user input\n   * @param {retrieve user input} event\n   */\n  updateMonth(event) {\n    this.setState({\n      month: event.target.value\n    });\n  }\n  /**\n   * Updating this.state.year with user input\n   * @param {retrieve user input} event \n   */\n\n\n  updateYear(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n  /**\n   * Generator for form (month)\n   */\n\n\n  generateMonthOption() {\n    var lis = [];\n\n    for (var i = 1; i < 13; i++) {\n      if (i < 10) {\n        lis.push(React.createElement(\"option\", {\n          value: \"0\" + i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, i));\n      } else {\n        lis.push(React.createElement(\"option\", {\n          value: i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, i));\n      }\n    }\n\n    return lis;\n  }\n  /**\n   * Generator for form (year)\n   */\n\n\n  generateYearOption() {\n    var lis = [];\n\n    for (var i = 2018; i < 2040; i++) {\n      lis.push(React.createElement(\"option\", {\n        value: i,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, i));\n    }\n\n    return lis;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      centered: true,\n      isOpen: this.props.toggled,\n      toggle: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Edit this Card\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.showEditedCard(), React.createElement(MDBInput, {\n      value: this.state.last_4,\n      onChange: this.updateLast4,\n      type: \"number\",\n      className: \"form-control\",\n      label: \"Last Four numbers of your card\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Card Brand\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      label: \"Card Brand\",\n      onChange: this.updateBrand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"jcb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"CB\"), React.createElement(\"option\", {\n      value: \"master_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"MasterCard\"), React.createElement(\"option\", {\n      value: \"visa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Visa\"), React.createElement(\"option\", {\n      value: \"american_express\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"American Express\"), React.createElement(\"option\", {\n      value: \"union_pay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Union Pay\"))), React.createElement(\"p\", {\n      className: \"dark-grey-text\",\n      style: {\n        fontSize: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Expiration Date\"), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.generateMonthOption())), React.createElement(\"div\", {\n      style: {\n        width: '45%',\n        display: 'inline-block',\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.generateYearOption()))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Proceed\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Utils\\CardEditor.js"],"names":["React","Component","MDBModal","MDBInput","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBBtn","getCardPictureSrc","getCard","CardEditor","constructor","props","toggled","closeEditingCard","state","last_4","brand","month","year","showEditedCard","bind","generateMonthOption","generateYearOption","updateLast4","updateBrand","updateMonth","updateYear","submit","close","event","preventDefault","cards","JSON","parse","localStorage","getItem","i","length","id","selectedID","expired_at","setItem","stringify","setState","card","width","maxWidth","display","marginLeft","verticalAlign","textAlign","target","value","lis","push","render","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBModal, MDBInput, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBBtn } from \"mdbreact\"\nimport { getCardPictureSrc, getCard } from \"../../Database/DatabaseCard\";\n\nexport default class CardEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggled = true;\n        this.closeEditingCard = null;\n        this.state = {\n            last_4: \"0000\",\n            brand: \"jcb\",\n            month: \"01\",\n            year: 2018\n        };\n        this.showEditedCard = this.showEditedCard.bind(this);\n        this.generateMonthOption = this.generateMonthOption.bind(this);\n        this.generateYearOption = this.generateYearOption.bind(this);\n        this.updateLast4 = this.updateLast4.bind(this);\n        this.updateBrand = this.updateBrand.bind(this);\n        this.updateMonth = this.updateMonth.bind(this);\n        this.updateYear = this.updateYear.bind(this);\n        this.submit = this.submit.bind(this);\n        this.close = this.close.bind(this);\n\n\n    }\n\n    /** \n    * Validate form and update the card\n    */\n    submit(event) {\n        event.preventDefault();\n        let cards = JSON.parse(localStorage.getItem(\"cards\"));\n        for (var i = 0; i < cards.length; i++) {\n            if (cards[i].id === this.props.selectedID) {\n                cards[i].last_4 = this.state.last_4;\n                cards[i].brand = this.state.brand;\n                cards[i].expired_at = this.state.year + \"-\" + this.state.month + \"-01\";\n            }\n        }\n        localStorage.setItem(\"cards\", JSON.stringify(cards));\n        this.close();\n    };\n\n    /**\n     * reset state for next use\n     */\n    close() {\n        this.setState({\n            last_4: \"0000\",\n            brand: \"jcb\",\n            month: \"01\",\n            year: 2018\n        });\n        this.props.closeEditingCard();\n    }\n\n    /**\n     * Confirmation for selected card to edit\n     */\n    showEditedCard() {\n        if (this.props.selectedID !== 0) {\n\n            let card = getCard(this.props.selectedID);\n            if (card !== null) {\n                return (\n                    <div>\n                        <p>Are you sure you want to edit the following card ?</p>\n                        <img src={getCardPictureSrc(card)} alt=\"\" style={{ width: '50%', maxWidth: '80px', display: 'inline-block' }}></img>\n                        <div style={{ display: 'inline-block', marginLeft: '20px', verticalAlign: 'bottom' }}>\n                            <h5 style={{ textAlign: \"left\" }}>Card : ****-****-****-{card.last_4}</h5>\n                            <p style={{ textAlign: \"left\" }}>Expired at : {card.expired_at}</p>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n\n    /**\n     * Updating this.state.last_4 with user input\n     * @param {retrieve user input} event \n     */\n    updateLast4(event) {\n        this.setState({ last_4: event.target.value });\n    };\n\n    /**\n     * Updating this.state.brand with user input\n     * @param {retrieve user input} event\n     */\n    updateBrand(event) {\n        this.setState({ brand: event.target.value });\n    };\n\n    /**\n     * Updating this.state.month with user input\n     * @param {retrieve user input} event\n     */\n    updateMonth(event) {\n        this.setState({ month: event.target.value });\n    }\n\n    /**\n     * Updating this.state.year with user input\n     * @param {retrieve user input} event \n     */\n    updateYear(event) {\n        this.setState({ year: event.target.value });\n    }\n\n    /**\n     * Generator for form (month)\n     */\n    generateMonthOption() {\n        var lis = [];\n        for (var i = 1; i < 13; i++) {\n            if (i < 10) {\n                lis.push(<option value={\"0\" + i} key={i}>{i}</option>);\n            }\n            else {\n                lis.push(<option value={i} key={i}>{i}</option>);\n            }\n        }\n        return lis;\n    }\n\n    /**\n     * Generator for form (year)\n     */\n    generateYearOption() {\n        var lis = [];\n        for (var i = 2018; i < 2040; i++) {\n            lis.push(<option value={i} key={i}>{i}</option>);\n        }\n        return lis;\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submit}>\n                <MDBModal centered isOpen={this.props.toggled} toggle={() => this.close()}>\n                    <MDBModalHeader toggle={() => this.close()}>Edit this Card</MDBModalHeader>\n                    <MDBModalBody>\n\n                        {this.showEditedCard()}\n                        <MDBInput value={this.state.last_4} onChange={this.updateLast4} type=\"number\" className=\"form-control\" label=\"Last Four numbers of your card\" required />\n                        <div style={{ marginBottom: '15px' }}>\n                            <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Card Brand</p>\n                            <select className=\"browser-default custom-select\" label=\"Card Brand\" onChange={this.updateBrand}>\n                                <option value='jcb'>CB</option>\n                                <option value='master_card'>MasterCard</option>\n                                <option value='visa'>Visa</option>\n                                <option value='american_express'>American Express</option>\n                                <option value='union_pay'>Union Pay</option>\n                            </select>\n                        </div>\n\n                        <p className=\"dark-grey-text\" style={{ fontSize: '14px' }}>Expiration Date</p>\n\n                        <div style={{ width: '45%', display: 'inline-block' }}>\n                            <select className=\"browser-default custom-select\" onChange={this.updateMonth}>\n                                {this.generateMonthOption()}\n                            </select>\n                        </div>\n\n                        <div style={{ width: '45%', display: 'inline-block', marginLeft: '20px' }}>\n                            <select className=\"browser-default custom-select\" onChange={this.updateYear}>\n                                {this.generateYearOption()}\n                            </select>\n                        </div>\n\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn color=\"secondary\" onClick={() => this.close()}>Close</MDBBtn>\n                        <MDBBtn color=\"primary\" type=\"submit\">Proceed</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}