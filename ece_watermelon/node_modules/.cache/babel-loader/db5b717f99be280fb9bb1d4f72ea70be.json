{"ast":null,"code":"import { getSessionUser } from \"./DatabaseSession\"; /// This file contains all the functions related to the wallet data access\n\n/**\r\n * Returns the wallet of the current session user and return null if no one's logged in\r\n */\n\nexport default function getSessionWallet() {\n  let user = getSessionUser();\n  let wallets = JSON.parse(localStorage.getItem(\"wallets\"));\n  let array = wallets.filter(w => {\n    return w.user_id === user.id;\n  }); // If wallet found return it\n\n  if (array.length === 1) {\n    return array[0];\n  } // Else return null\n  else {\n      return null;\n    }\n}\n/**\r\n * Return the balance of the wallet as string\r\n */\n\nexport function getWalletAmount() {\n  let wallet = getSessionWallet(getSessionUser());\n\n  if (wallet != null) {\n    return (wallet.balance / 100.0).toFixed(2);\n  }\n}","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Database\\DatabaseWallet.js"],"names":["getSessionUser","getSessionWallet","user","wallets","JSON","parse","localStorage","getItem","array","filter","w","user_id","id","length","getWalletAmount","wallet","balance","toFixed"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B,C,CAEA;;AAEA;;;;AAGA,eAAe,SAASC,gBAAT,GAA2B;AAEtC,MAAIC,IAAI,GAAGF,cAAc,EAAzB;AACA,MAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd;AAEA,MAAIC,KAAK,GAAGL,OAAO,CAACM,MAAR,CAAeC,CAAC,IAAE;AAC1B,WAAOA,CAAC,CAACC,OAAF,KAAcT,IAAI,CAACU,EAA1B;AACH,GAFW,CAAZ,CALsC,CAStC;;AACA,MAAGJ,KAAK,CAACK,MAAN,KAAiB,CAApB,EAAsB;AAClB,WAAOL,KAAK,CAAC,CAAD,CAAZ;AACH,GAFD,CAGA;AAHA,OAII;AACA,aAAO,IAAP;AACH;AACJ;AAED;;;;AAGA,OAAO,SAASM,eAAT,GAA0B;AAC7B,MAAIC,MAAM,GAAGd,gBAAgB,CAACD,cAAc,EAAf,CAA7B;;AACA,MAAGe,MAAM,IAAI,IAAb,EAAkB;AACd,WAAO,CAACA,MAAM,CAACC,OAAP,GAAiB,KAAlB,EAAyBC,OAAzB,CAAiC,CAAjC,CAAP;AACH;AACJ","sourcesContent":["import { getSessionUser } from \"./DatabaseSession\";\r\n\r\n/// This file contains all the functions related to the wallet data access\r\n\r\n/**\r\n * Returns the wallet of the current session user and return null if no one's logged in\r\n */\r\nexport default function getSessionWallet(){\r\n\r\n    let user = getSessionUser();\r\n    let wallets = JSON.parse(localStorage.getItem(\"wallets\"))\r\n\r\n    let array = wallets.filter(w=>{\r\n        return w.user_id === user.id;\r\n    });\r\n\r\n    // If wallet found return it\r\n    if(array.length === 1){\r\n        return array[0];\r\n    }\r\n    // Else return null\r\n    else{\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Return the balance of the wallet as string\r\n */\r\nexport function getWalletAmount(){\r\n    let wallet = getSessionWallet(getSessionUser());\r\n    if(wallet != null){\r\n        return (wallet.balance / 100.0).toFixed(2);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}