{"ast":null,"code":"/**\r\n * Function connecting the user owning the mail address and the password to the local database\r\n * @param {mail of the user} mail \r\n * @param {password of the user} pswrd \r\n */\nexport function loginUser(mail, pswrd) {\n  var users = JSON.parse(localStorage.getItem(\"users\"));\n  var check = false;\n  var array = users.filter(user => {\n    return user.email === mail && user.password === pswrd;\n  });\n\n  if (array.length === 0) {\n    logoutUser();\n  } else {\n    check = true;\n    let logged = array[0];\n    localStorage.setItem(\"session\", JSON.stringify(logged));\n  }\n\n  return check;\n}\n/**\r\n * This function sets the current user of the session to null\r\n */\n\nexport function logoutUser() {\n  var logged = null;\n  localStorage.setItem(\"session\", JSON.stringify(logged));\n}\n/**\r\n * This function returns the user currently connected to this session\r\n */\n\nexport function getSessionUser() {\n  return JSON.parse(localStorage.getItem(\"session\"));\n}\nexport default loginUser;","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Database\\DatabaseSession.js"],"names":["loginUser","mail","pswrd","users","JSON","parse","localStorage","getItem","check","array","filter","user","email","password","length","logoutUser","logged","setItem","stringify","getSessionUser"],"mappings":"AACA;;;;;AAKA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAA+B;AAClC,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,KAAK,GAAGN,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAE;AAC3B,WAAOA,IAAI,CAACC,KAAL,KAAeX,IAAf,IAAuBU,IAAI,CAACE,QAAL,KAAkBX,KAAhD;AACH,GAFW,CAAZ;;AAIA,MAAGO,KAAK,CAACK,MAAN,KAAiB,CAApB,EAAsB;AAClBC,IAAAA,UAAU;AACb,GAFD,MAEK;AACDP,IAAAA,KAAK,GAAG,IAAR;AACA,QAAIQ,MAAM,GAAGP,KAAK,CAAC,CAAD,CAAlB;AACAH,IAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCb,IAAI,CAACc,SAAL,CAAeF,MAAf,CAAhC;AACH;;AACD,SAAOR,KAAP;AACH;AAED;;;;AAGA,OAAO,SAASO,UAAT,GAAqB;AACxB,MAAIC,MAAM,GAAG,IAAb;AACAV,EAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCb,IAAI,CAACc,SAAL,CAAeF,MAAf,CAAhC;AACH;AAED;;;;AAGA,OAAO,SAASG,cAAT,GAAyB;AAC5B,SAAOf,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAP;AACH;AAED,eAAeP,SAAf","sourcesContent":["\r\n/**\r\n * Function connecting the user owning the mail address and the password to the local database\r\n * @param {mail of the user} mail \r\n * @param {password of the user} pswrd \r\n */\r\nexport function loginUser(mail, pswrd){\r\n    var users = JSON.parse(localStorage.getItem(\"users\"));\r\n    var check = false;\r\n    var array = users.filter(user=>{\r\n        return user.email === mail && user.password === pswrd\r\n    })\r\n    \r\n    if(array.length === 0){\r\n        logoutUser();\r\n    }else{\r\n        check = true;\r\n        let logged = array[0];\r\n        localStorage.setItem(\"session\", JSON.stringify(logged));\r\n    }\r\n    return check;\r\n}\r\n\r\n/**\r\n * This function sets the current user of the session to null\r\n */\r\nexport function logoutUser(){\r\n    var logged = null;\r\n    localStorage.setItem(\"session\", JSON.stringify(logged));\r\n}\r\n\r\n/**\r\n * This function returns the user currently connected to this session\r\n */\r\nexport function getSessionUser(){\r\n    return JSON.parse(localStorage.getItem(\"session\"));\r\n}\r\n\r\nexport default loginUser;"]},"metadata":{},"sourceType":"module"}