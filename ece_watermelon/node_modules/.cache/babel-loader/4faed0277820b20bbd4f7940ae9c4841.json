{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\NavBar.js\";\nimport React, { Component } from \"react\";\nimport logo from '../Pictures/logo.png';\nimport { getSessionUser, logoutUser } from \"../Database/DatabaseSession\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon } from \"mdbreact\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCollapse = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.content = this.content.bind(this);\n  }\n  /**\n   * Toggle the hamburger when necessary\n   */\n\n\n  /**\n   * This function generates the navbar items in function of the user connected\n   * If no user is connected yet, the function returns a login / register component\n   */\n  content() {\n    // Get the logged User\n    var user = getSessionUser(); // If the user isn't connected, show login / register navbar\n\n    if (user === null) {\n      return React.createElement(MDBNavbarNav, {\n        right: true,\n        style: {\n          marginRight: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/login\",\n        className: \"black-text\",\n        style: {\n          fontSize: '20px',\n          fontWeight: \"400\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Login\")), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/register\",\n        className: \"black-text\",\n        style: {\n          fontSize: '20px',\n          fontWeight: \"400\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Register\")));\n    } // If an user is connected, show user navbar\n    else {\n        return React.createElement(MDBNavbarNav, {\n          right: true,\n          style: {\n            marginRight: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(MDBNavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"dark-grey-text nav-link Ripple-parent\",\n          style: {\n            fontSize: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Welcome \", user.first_name, \" !\")), React.createElement(MDBNavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(MDBNavLink, {\n          to: \"/account\",\n          className: \"black-text\",\n          style: {\n            fontSize: '70px',\n            fontWeight: \"400\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Account\")), React.createElement(MDBNavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(MDBNavLink, {\n          to: \"/wallet\",\n          className: \"black-text\",\n          style: {\n            fontSize: '20px',\n            fontWeight: \"400\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Wallet\")), React.createElement(MDBNavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(MDBNavLink, {\n          to: \"/\",\n          onClick: () => logoutUser(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          className: \"nav-link black-text\",\n          icon: \"power-off\",\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }))));\n      }\n  }\n  /**\n   * Render method of the NavBar class\n   */\n\n\n  render() {\n    return React.createElement(MDBNavbar, {\n      className: \"tempting-azure-gradient\",\n      dark: true,\n      expand: \"md\",\n      style: {\n        width: '100vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"\",\n      style: {\n        width: '50px',\n        height: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(MDBNavbarBrand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"black-text\",\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"ECE WaterMelon\"))), React.createElement(MDBNavbarToggler, {\n      onClick: this.toggleCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      id: \"navbarCollapse3\",\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.content()));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\NavBar.js"],"names":["React","Component","logo","getSessionUser","logoutUser","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavItem","MDBNavLink","MDBNavbarToggler","MDBCollapse","MDBIcon","NavBar","constructor","props","toggleCollapse","setState","isOpen","state","content","bind","user","marginRight","fontSize","fontWeight","first_name","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from '../Pictures/logo.png';\nimport { getSessionUser, logoutUser } from \"../Database/DatabaseSession\";\nimport {\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon\n} from \"mdbreact\";\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.content = this.content.bind(this);\n    }\n\n    /**\n     * Toggle the hamburger when necessary\n     */\n    toggleCollapse = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    /**\n     * This function generates the navbar items in function of the user connected\n     * If no user is connected yet, the function returns a login / register component\n     */\n    content() {\n        // Get the logged User\n        var user = getSessionUser();\n\n        // If the user isn't connected, show login / register navbar\n        if (user === null) {\n            return (\n                <MDBNavbarNav right style={{ marginRight: '20px' }}>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/login\" className=\"black-text\" style={{ fontSize: '20px', fontWeight:\"400\"}}>Login</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/register\" className=\"black-text\" style={{ fontSize: '20px', fontWeight:\"400\"}}>Register</MDBNavLink>\n                    </MDBNavItem>\n                </MDBNavbarNav>\n            );\n        }\n        // If an user is connected, show user navbar\n        else{\n            return (\n                <MDBNavbarNav right style={{ marginRight: '20px' }}>\n                    <MDBNavItem>\n                        <p className=\"dark-grey-text nav-link Ripple-parent\" style={{ fontSize: '20px'}}>Welcome {user.first_name} !</p>\n                    </MDBNavItem>\n                    \n                    <MDBNavItem>\n                        <MDBNavLink to=\"/account\" className=\"black-text\" style={{ fontSize: '70px', fontWeight:\"400\"}}>Account</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/wallet\" className=\"black-text\" style={{ fontSize: '20px', fontWeight:\"400\"}}>Wallet</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/\" onClick={() => logoutUser()}>\n                            <MDBIcon className=\"nav-link black-text\" icon=\"power-off\" size=\"lg\"/>\n                        </MDBNavLink>\n                    </MDBNavItem>\n                </MDBNavbarNav>\n            );\n        }\n    }\n\n    /**\n     * Render method of the NavBar class\n     */\n    render() {\n\n        return (\n            <MDBNavbar className=\"tempting-azure-gradient\" dark expand=\"md\" style={{ width: '100vw' }}>\n\n                <MDBNavLink to=\"/\">\n                    <MDBNavbarBrand >\n                        <img src={logo} alt=\"\" style={{ width: '50px', height: '50px' }} />\n                    </MDBNavbarBrand>\n                    <MDBNavbarBrand>\n                        <strong className=\"black-text\" style={{ fontSize: '25px' }}>ECE WaterMelon</strong>\n                    </MDBNavbarBrand>\n                </MDBNavLink>\n\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                    {this.content()}\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}