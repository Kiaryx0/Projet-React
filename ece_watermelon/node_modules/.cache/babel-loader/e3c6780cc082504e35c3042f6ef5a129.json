{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kiary\\\\Documents\\\\GitHub\\\\Projet-React\\\\ece_watermelon\\\\src\\\\Components\\\\Utils\\\\AccountEditor.js\";\nimport React, { Component } from \"react\";\nimport loginUser, { getSessionUser } from \"../../Database/DatabaseSession\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCardFooter, MDBCardTitle, MDBAlert, MDBInput } from \"mdbreact\";\nexport default class AccountEditor extends Component {\n  constructor(props) {\n    super(props);\n    let user = getSessionUser();\n    this.state = {\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      password: user.password,\n      show_password: false,\n      profileUpdated: false\n    };\n    this.onFirstNameUpdate = this.onFirstNameUpdate.bind(this);\n    this.onLastNameUpdate = this.onLastNameUpdate.bind(this);\n    this.onEmailUpdate = this.onEmailUpdate.bind(this);\n    this.onPasswordUpdate = this.onPasswordUpdate.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n    this.showPassword = this.showPassword.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n  /**\n   * Update current user informations according to his inputs\n   * @param {retrieve all inputs in form} event \n   */\n\n\n  submit(event) {\n    event.preventDefault(); // Modify user in users table\n\n    let users = JSON.parse(localStorage.getItem(\"users\"));\n    let session = getSessionUser();\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].id === session.id) {\n        users[i].first_name = this.state.first_name;\n        users[i].last_name = this.state.last_name;\n        users[i].email = this.state.email;\n        users[i].password = this.state.password;\n      }\n    }\n\n    localStorage.setItem(\"users\", JSON.stringify(users)); // Modify session user\n\n    loginUser(this.state.email, this.state.password); // Refresh navbar\n\n    this.props.refresh(); // Updated to be sure\n\n    let user = getSessionUser();\n    this.setState({\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      password: user.password,\n      profileUpdated: true\n    });\n  }\n  /**\n   * Updating this.state.first_name with user input\n   * @param {retrieve user input} event \n   */\n\n\n  onFirstNameUpdate(event) {\n    this.setState({\n      first_name: event.target.value\n    });\n  }\n  /**\n   * Updating this.state.last_name with user input\n   * @param {retrieve user input} event \n   */\n\n\n  onLastNameUpdate(event) {\n    this.setState({\n      last_name: event.target.value\n    });\n  }\n  /**\n   * Updating this.state.email with user input\n   * @param {retrieve user input} event \n   */\n\n\n  onEmailUpdate(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n  /**\n   * Updating this.state.password with user input\n   * @param {retrieve user input} event \n   */\n\n\n  onPasswordUpdate(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n  /**\n   * Check if user ticks checkbox\n   * @param {retrieve user input} event \n   */\n\n\n  onCheck(event) {\n    this.setState({\n      show_password: !this.state.show_password\n    });\n  }\n  /**\n   * Show password to user\n   */\n\n\n  showPassword() {\n    if (this.state.show_password) {\n      return \"text\";\n    } else {\n      return \"password\";\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.profileUpdated && React.createElement(MDBAlert, {\n      color: \"success\",\n      dismiss: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Profile has been updated!\"), React.createElement(MDBCard, {\n      className: \"text-center\",\n      style: {\n        backgroundColor: \"rgba(125,125,140,0.5)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      style: {\n        backgroundColor: \"inherit\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      className: \"white-text\",\n      style: {\n        fontSize: '36px',\n        marginTop: '20px',\n        marginBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"My Account Informations\")), React.createElement(MDBCardBody, {\n      style: {\n        margin: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"white-text\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"First Name :\"), React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"First Name\",\n      type: \"text\",\n      icon: \"pen\",\n      value: this.state.first_name,\n      onChange: this.onFirstNameUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"white-text\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Last Name :\"), React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"Last Name\",\n      type: \"text\",\n      icon: \"pen\",\n      value: this.state.last_name,\n      onChange: this.onLastNameUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))), React.createElement(\"h4\", {\n      className: \"white-text\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"Email\",\n      type: \"email\",\n      icon: \"pen\",\n      value: this.state.email,\n      onChange: this.onEmailUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      className: \"white-text\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Password\"), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      className: \"white-text\",\n      label: \"Password\",\n      type: this.showPassword(),\n      icon: \"pen\",\n      value: this.state.password,\n      onChange: this.onPasswordUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(MDBCol, {\n      className: \"d-flex align-items-center white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Show password?\")), React.createElement(MDBCol, {\n      className: \"d-flex align-items center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      type: \"checkbox\",\n      id: \"checkbox2\",\n      onChange: this.onCheck,\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))), React.createElement(MDBCardFooter, {\n      style: {\n        backgroundColor: \"inherit\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      gradient: \"near-moon\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Save Changes\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Kiary\\Documents\\GitHub\\Projet-React\\ece_watermelon\\src\\Components\\Utils\\AccountEditor.js"],"names":["React","Component","loginUser","getSessionUser","MDBRow","MDBCol","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCardFooter","MDBCardTitle","MDBAlert","MDBInput","AccountEditor","constructor","props","user","state","first_name","last_name","email","password","show_password","profileUpdated","onFirstNameUpdate","bind","onLastNameUpdate","onEmailUpdate","onPasswordUpdate","onCheck","showPassword","submit","event","preventDefault","users","JSON","parse","localStorage","getItem","session","i","length","id","setItem","stringify","refresh","setState","target","value","render","backgroundColor","fontSize","marginTop","marginBottom","margin","textAlign","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport loginUser, { getSessionUser } from \"../../Database/DatabaseSession\";\nimport {\n    MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCardFooter,\n    MDBCardTitle, MDBAlert, MDBInput\n} from \"mdbreact\";\n\nexport default class AccountEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        let user = getSessionUser();\n        this.state = {\n            first_name: user.first_name,\n            last_name: user.last_name,\n            email: user.email,\n            password: user.password,\n            show_password: false,\n            profileUpdated: false\n        }\n        this.onFirstNameUpdate = this.onFirstNameUpdate.bind(this);\n        this.onLastNameUpdate = this.onLastNameUpdate.bind(this);\n        this.onEmailUpdate = this.onEmailUpdate.bind(this);\n        this.onPasswordUpdate = this.onPasswordUpdate.bind(this);\n        this.onCheck = this.onCheck.bind(this);\n        this.showPassword = this.showPassword.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    /**\n     * Update current user informations according to his inputs\n     * @param {retrieve all inputs in form} event \n     */\n    submit(event){\n        event.preventDefault();\n        // Modify user in users table\n        let users = JSON.parse(localStorage.getItem(\"users\"))\n        let session = getSessionUser()\n        for(var i=0; i<users.length; i++){\n            if(users[i].id === session.id){\n                users[i].first_name = this.state.first_name;\n                users[i].last_name = this.state.last_name;\n                users[i].email = this.state.email;\n                users[i].password = this.state.password;\n            }\n        }\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        // Modify session user\n        loginUser(this.state.email, this.state.password);\n        // Refresh navbar\n        this.props.refresh();\n        // Updated to be sure\n        let user = getSessionUser();\n        this.setState ({\n            first_name: user.first_name,\n            last_name: user.last_name,\n            email: user.email,\n            password: user.password,\n            profileUpdated: true\n        });\n\n    }\n\n    /**\n     * Updating this.state.first_name with user input\n     * @param {retrieve user input} event \n     */\n    onFirstNameUpdate(event) {\n        this.setState({ first_name: event.target.value });\n    }\n\n    /**\n     * Updating this.state.last_name with user input\n     * @param {retrieve user input} event \n     */\n    onLastNameUpdate(event) {\n        this.setState({ last_name: event.target.value });\n    }\n\n    /**\n     * Updating this.state.email with user input\n     * @param {retrieve user input} event \n     */\n    onEmailUpdate(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    /**\n     * Updating this.state.password with user input\n     * @param {retrieve user input} event \n     */\n    onPasswordUpdate(event) {\n        this.setState({ password: event.target.value });\n    }\n\n    /**\n     * Check if user ticks checkbox\n     * @param {retrieve user input} event \n     */\n    onCheck(event) {\n        this.setState({ show_password: !this.state.show_password });\n    }\n\n    /**\n     * Show password to user\n     */\n    showPassword() {\n        if (this.state.show_password) {\n            return \"text\";\n        } else {\n            return \"password\";\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submit}>\n                {this.state.profileUpdated && <MDBAlert color=\"success\" dismiss>Profile has been updated!</MDBAlert>}\n                <MDBCard className=\"text-center\" style={{ backgroundColor: \"rgba(125,125,140,0.5)\" }}>\n                    <MDBCardHeader style={{ backgroundColor: \"inherit\" }}>\n                        <MDBCardTitle className=\"white-text\" style={{ fontSize: '36px', marginTop: '20px', marginBottom: '20px' }}>My Account Informations</MDBCardTitle>\n                    </MDBCardHeader>\n                    <MDBCardBody style={{ margin: '50px' }}>\n                        <MDBRow>\n                            <MDBCol md=\"6\">\n                                <h4 className=\"white-text\" style={{ textAlign: \"left\" }}>First Name :</h4>\n                                <div style={{ textAlign: \"left\" }}>\n                                    <MDBInput className=\"white-text\" label=\"First Name\" type=\"text\" icon=\"pen\" value={this.state.first_name} onChange={this.onFirstNameUpdate} />\n                                </div>\n                            </MDBCol>\n                            <MDBCol md=\"6\">\n                                <h4 className=\"white-text\" style={{ textAlign: \"left\" }}>Last Name :</h4>\n                                <div style={{ textAlign: \"left\" }}>\n                                    <MDBInput className=\"white-text\" label=\"Last Name\" type=\"text\" icon=\"pen\" value={this.state.last_name} onChange={this.onLastNameUpdate} />\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <h4 className=\"white-text\" style={{ textAlign: \"left\" }}>Email:</h4>\n                        <div style={{ textAlign: \"left\" }}>\n                            <MDBInput className=\"white-text\" label=\"Email\" type=\"email\" icon=\"pen\" value={this.state.email} onChange={this.onEmailUpdate} />\n                        </div>\n                        <h4 className=\"white-text\" style={{ textAlign: \"left\" }}>Password</h4>\n                        <MDBRow>\n                            <MDBCol md=\"7\">\n                                <div style={{ textAlign: \"left\" }}>\n                                    <MDBInput className=\"white-text\" label=\"Password\" type={this.showPassword()} icon=\"pen\" value={this.state.password} onChange={this.onPasswordUpdate} />\n                                </div>\n                            </MDBCol>\n                            <MDBCol className=\"d-flex align-items-center white-text\">\n                                <p>Show password?</p>\n                            </MDBCol>\n                            <MDBCol className=\"d-flex align-items center\">\n                                <MDBInput type=\"checkbox\" id=\"checkbox2\" onChange={this.onCheck} style={{width:\"20px\"}}/>\n                            </MDBCol>\n                        </MDBRow>                      \n\n                    </MDBCardBody>\n                    <MDBCardFooter style={{ backgroundColor: \"inherit\" }} >\n                        <MDBRow middle>\n                            <MDBCol md=\"12\" >\n                                <MDBBtn gradient=\"near-moon\" type=\"submit\">Save Changes</MDBBtn>\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBCardFooter>\n                </MDBCard>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}